# Enclose jinga2 values in quotes.
plugin: constructed
#strict: no # Set to yes for debugging. Loose falure causes plugin to silently fail.
compose:
    oct3: "inventory_hostname | regex_replace('^\\d{1,3}\\.\\d{1,3}\\.(\\d{1,3})\\.\\d{1,3}$', '\\1')"
    # You may use only existing variables, e.g. from a persistent fact cache.
    # `strict: False` will skip this instead of producing an error if it is missing facts.
    building: "SysName | regex_replace('^[iI]0-.*_(\\d{1,3})$', '\\1')"
    room: "SysName | regex_replace('^[iI]0-.*_(\\d{1,3}).*\\d{1,3}$', '\\1')"
groups: # simple name matching
    ASA: MachineType.upper().startswith('CISCO ASA')
keyed_groups: # using the default separator "_"
    - prefix: oct3 # this creates a group per 3-rd octet (oct3_<3-rd_octet>)
      key: oct3
    - prefix: sysname
      key: SysName
    - prefix: vendor
      key: "Vendor.split() | first | upper"
    - prefix: building
      key: building
    - prefix: room
      key: room
